{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/practice-project/src/components/AddUser/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport styles from \"./AddUser.module.css\";\nimport Button from \"../Button/Button\";\nimport ErrorModal from \"../ErrorModal/ErrorModal\";\nimport Card from \"../UI/Card\";\nimport Wrapper from \"../Helper/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [userName, setUserName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const userNameChangeHandler = e => {\n    setUserName(e.target.value);\n  };\n\n  const ageChangeHandler = e => {\n    setAge(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value; // If username entry is null, throw error modal\n\n    if (enteredName.trim().length === 0 && (enteredAge < 0 || age === \"\") === true) {\n      // setUserNameErrorExists(true);\n      // setAgeErrorExists(true);\n      // setIsModalShown(true);\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    } else if (enteredName.trim().length <= 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid username (non-empty).\"\n      });\n      return;\n    } else if (+enteredAge <= 0) {\n      // +makes sure that string is evaluated as int\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n      return;\n    }\n\n    const addUserData = {\n      userName: enteredName,\n      age: enteredAge\n    };\n    console.log(addUserData); // setAgeErrorExists(false);\n    // setUserNameErrorExists(false);\n\n    setUserName(\"\");\n    setAge(\"\");\n    props.onSaveUserData(addUserData);\n  };\n\n  const closeModalHandler = () => {\n    // setIsModalShown(false);\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onCloseModalHandler: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \" Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styles.input,\n            placeholder: \"Enter Username Here...\",\n            onChange: userNameChangeHandler,\n            value: userName,\n            ref: nameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            className: styles.label,\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: styles.input,\n            placeholder: \"Enter Age Here...\",\n            onChange: ageChangeHandler,\n            value: age,\n            ref: ageInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: submitHandler,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"0SG+SxQXv5Bx/HlPou6y8kKBlVY=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/practice-project/src/components/AddUser/AddUser.js"],"names":["React","useState","useRef","styles","Button","ErrorModal","Card","Wrapper","AddUser","props","nameInputRef","ageInputRef","userName","setUserName","age","setAge","error","setError","userNameChangeHandler","e","target","value","ageChangeHandler","submitHandler","preventDefault","enteredName","current","enteredAge","trim","length","title","message","addUserData","console","log","onSaveUserData","closeModalHandler","input","label"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport styles from \"./AddUser.module.css\";\nimport Button from \"../Button/Button\";\nimport ErrorModal from \"../ErrorModal/ErrorModal\";\nimport Card from \"../UI/Card\";\nimport Wrapper from \"../Helper/Wrapper\";\n\nconst AddUser = (props) => {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n\n  const [userName, setUserName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const userNameChangeHandler = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const ageChangeHandler = (e) => {\n    setAge(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value;\n\n    // If username entry is null, throw error modal\n    if (\n      enteredName.trim().length === 0 &&\n      (enteredAge < 0 || age === \"\") === true\n    ) {\n      // setUserNameErrorExists(true);\n      // setAgeErrorExists(true);\n      // setIsModalShown(true);\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\",\n      });\n\n      return;\n    } else if (enteredName.trim().length <= 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid username (non-empty).\",\n      });\n      return;\n    } else if (+enteredAge <= 0) {\n      // +makes sure that string is evaluated as int\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid age (> 0).\",\n      });\n      return;\n    }\n\n    const addUserData = {\n      userName: enteredName,\n      age: enteredAge,\n    };\n\n    console.log(addUserData);\n    // setAgeErrorExists(false);\n    // setUserNameErrorExists(false);\n    setUserName(\"\");\n    setAge(\"\");\n\n    props.onSaveUserData(addUserData);\n  };\n\n  const closeModalHandler = () => {\n    // setIsModalShown(false);\n    setError(null);\n  };\n\n  return (\n    <Wrapper>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onCloseModalHandler={closeModalHandler}\n        />\n      )}\n\n      <Card className={styles.input}>\n        <form>\n          <div>\n            <label htmlFor=\"username\"> Username: </label>\n            <input\n              type=\"text\"\n              className={styles.input}\n              placeholder=\"Enter Username Here...\"\n              onChange={userNameChangeHandler}\n              value={userName}\n              ref={nameInputRef}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"age\" className={styles.label}>\n              Age:\n            </label>\n            <input\n              type=\"number\"\n              className={styles.input}\n              placeholder=\"Enter Age Here...\"\n              onChange={ageChangeHandler}\n              value={age}\n              ref={ageInputRef}\n            />\n          </div>\n          <Button type={\"button\"} onClick={submitHandler}>\n            Add User\n          </Button>\n        </form>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}