{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbenelli/Desktop/Section-16-Forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const nameInputRef = useRef(\"\");\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value); // console.log(enteredName);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); // prevent http request being sent, if http request was sent it would reload the page and restart the react application. We would also loose state.\n    // setEnteredName(event.target.value);\n\n    console.log(\"form submission handler\", enteredName);\n    const enteredValue = nameInputRef.current;\n    console.log(\"form submission handler\", enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\" // onChange={nameInputChangeHandler}\n        // onChange={(event) => (enteredNameRef.current = event.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"gTkTQU7a3N23wiDN2/y+iDwJLIc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useRef","SimpleInput","props","enteredName","setEnteredName","nameInputRef","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","enteredValue","current"],"sources":["/Users/kevinbenelli/Desktop/Section-16-Forms/src/components/SimpleInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const nameInputRef = useRef(\"\");\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    // console.log(enteredName);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault(); // prevent http request being sent, if http request was sent it would reload the page and restart the react application. We would also loose state.\n    // setEnteredName(event.target.value);\n    console.log(\"form submission handler\", enteredName);\n    const enteredValue = nameInputRef.current;\n    console.log(\"form submission handler\", enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          // onChange={nameInputChangeHandler}\n          // onChange={(event) => (enteredNameRef.current = event.target.value)}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMM,YAAY,GAAGL,MAAM,CAAC,EAAD,CAA3B;;EAEA,MAAMM,sBAAsB,GAAIC,KAAD,IAAW;IACxCH,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADwC,CAExC;EACD,CAHD;;EAKA,MAAMC,qBAAqB,GAAIH,KAAD,IAAW;IACvCA,KAAK,CAACI,cAAN,GADuC,CACf;IACxB;;IACAC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCV,WAAvC;IACA,MAAMW,YAAY,GAAGT,YAAY,CAACU,OAAlC;IACAH,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,YAAvC;EACD,CAND;;EAQA,oBACE;IAAM,QAAQ,EAAEJ,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEL,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL,CAIE;QACA;;MALF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAWE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAnCD;;GAAMJ,W;;KAAAA,W;AAqCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}