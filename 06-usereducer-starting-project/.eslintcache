[{"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/index.js":"1","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/App.js":"2","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/Login/Login.js":"3","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/Home/Home.js":"4","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/MainHeader/MainHeader.js":"5","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/MainHeader/Navigation.js":"6","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/UI/Card/Card.js":"7","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/UI/Button/Button.js":"8","/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/store/auth-context.js":"9"},{"size":169,"mtime":1616593928000,"results":"10","hashOfConfig":"11"},{"size":1170,"mtime":1640831206108,"results":"12","hashOfConfig":"11"},{"size":4392,"mtime":1640828163666,"results":"13","hashOfConfig":"11"},{"size":347,"mtime":1640828270928,"results":"14","hashOfConfig":"11"},{"size":333,"mtime":1640831204870,"results":"15","hashOfConfig":"11"},{"size":670,"mtime":1640831413412,"results":"16","hashOfConfig":"11"},{"size":218,"mtime":1616593928000,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":124,"mtime":1640828809836,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m8qnbh",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/index.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/App.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/Login/Login.js",["40"],"import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\n// state = last state snapshot\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  // When object loses focus, we need to validate input again\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASSWORD\") {\n    console.log(\"in user_pass \");\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    console.log(\"in input_blur pass\");\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isVaid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  // if you update a state that depends on another state useReduce\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // use case for useReducer, we should be using function when depending on old states but we have 2 different states.\n    // can create problem where 1 state has not been set.\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({ type: \"USER_PASSWORD\", val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.value.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwordState.value.isValid);\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.value.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n",["41","42"],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/Home/Home.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/MainHeader/MainHeader.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/MainHeader/Navigation.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/UI/Card/Card.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/UI/Button/Button.js",[],"/Users/kevinbenelli/Desktop/udemy-reactjs/ReactJS-Course-Git-Repo/06-usereducer-starting-project/src/components/store/auth-context.js",[],{"ruleId":"43","severity":1,"message":"44","line":71,"column":6,"nodeType":"45","endLine":71,"endColumn":37,"suggestions":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["51"],"no-native-reassign",["52"],"no-negated-in-lhs",["53"],{"desc":"54","fix":"55"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"56","text":"57"},[2118,2149],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]