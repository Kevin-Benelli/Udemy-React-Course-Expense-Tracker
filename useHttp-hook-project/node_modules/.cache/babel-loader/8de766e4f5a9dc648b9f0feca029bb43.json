{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\n\nconst useHttp = applyData => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, [requestConfig, applyData]);\n  return {\n    isLoading,\n    // isLoading: isLoading,\n    error,\n    // error: error,\n    sendRequest // sendRequest: sendRequest,\n\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"names":["React","useState","useCallback","useHttp","applyData","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/kevinbenelli/Desktop/04-onwards-to-a-more-realistic-example 2/src/hooks/use-http.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nconst useHttp = (applyData) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(\n    async (requestConfig) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(requestConfig.url, {\n          method: requestConfig.method ? requestConfig.method : \"GET\",\n          headers: requestConfig.headers ? requestConfig.headers : {},\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Request failed!\");\n        }\n\n        const data = await response.json();\n\n        applyData(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n      }\n      setIsLoading(false);\n    },\n    [requestConfig, applyData]\n  );\n\n  return {\n    isLoading, // isLoading: isLoading,\n    error, // error: error,\n    sendRequest, // sendRequest: sendRequest,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,MAAMC,OAAO,GAAIC,SAAD,IAAe;EAAA;;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMQ,WAAW,GAAGP,WAAW,CAC7B,MAAOQ,aAAP,IAAyB;IACvBJ,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAf,EAAoB;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACI,MAArC,GAA8C,KADR;QAE9CC,OAAO,EAAEL,aAAa,CAACK,OAAd,GAAwBL,aAAa,CAACK,OAAtC,GAAgD,EAFX;QAG9CC,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAA0D;MAHlB,CAApB,CAA5B;;MAMA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MAEAlB,SAAS,CAACiB,IAAD,CAAT;IACD,CAdD,CAcE,OAAOE,GAAP,EAAY;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACD;;IACDlB,YAAY,CAAC,KAAD,CAAZ;EACD,CAtB4B,EAuB7B,CAACI,aAAD,EAAgBN,SAAhB,CAvB6B,CAA/B;EA0BA,OAAO;IACLC,SADK;IACM;IACXE,KAFK;IAEE;IACPE,WAHK,CAGQ;;EAHR,CAAP;AAKD,CAnCD;;GAAMN,O;;AAqCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}