{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbenelli/Desktop/udemy-reactjs/course-content/01-starting-setup/src/components/Expenses/ExpensesList.js\";\nimport React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = props => {\n  // you can store jsx content in variables\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expenses found! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 25\n  }, this);\n\n  if (props.filteredExpenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \" Found No Expenses! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.filteredExpenses.map(filteredExpense => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(ExpenseItem, {\n        title: props.filteredExpense.title,\n        amount: props.filteredExpense.amount,\n        date: props.filteredExpense.date\n      }, props.filteredExpense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/Users/kevinbenelli/Desktop/udemy-reactjs/course-content/01-starting-setup/src/components/Expenses/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesList","props","expensesContent","filteredExpenses","length","map","filteredExpense","title","amount","date","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,MAAIC,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAID,KAAK,CAACE,gBAAN,CAAuBC,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACGH,KAAK,CAACE,gBAAN,CAAuBE,GAAvB,CAA4BC,eAAD,IAAqB;AAC/C;;AACA;AAAA,cAAC,WAAD;AAEE,QAAA,KAAK,EAAEL,KAAK,CAACK,eAAN,CAAsBC,KAF/B;AAGE,QAAA,MAAM,EAAEN,KAAK,CAACK,eAAN,CAAsBE,MAHhC;AAIE,QAAA,IAAI,EAAEP,KAAK,CAACK,eAAN,CAAsBG;AAJ9B,SACOR,KAAK,CAACK,eAAN,CAAsBI,EAD7B;AAAA;AAAA;AAAA;AAAA;AAMD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBD;;KAAMV,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  // you can store jsx content in variables\n  let expensesContent = <p> No expenses found! </p>;\n\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\"> Found No Expenses! </h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.filteredExpenses.map((filteredExpense) => {\n        return;\n        <ExpenseItem\n          key={props.filteredExpense.id}\n          title={props.filteredExpense.title}\n          amount={props.filteredExpense.amount}\n          date={props.filteredExpense.date}\n        />;\n      })}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n"]},"metadata":{},"sourceType":"module"}