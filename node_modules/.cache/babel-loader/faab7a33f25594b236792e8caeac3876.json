{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbenelli/Desktop/udemy-reactjs/course-content/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  }); // you can store jsx content in variables\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expenses found! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    filteredExpenses.length > 0 && filteredExpenses.map(filteredExpense => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: filteredExpense.title,\n        amount: filteredExpense.amount,\n        date: filteredExpense.date\n      }, filteredExpense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: expensesContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/kevinbenelli/Desktop/udemy-reactjs/course-content/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","console","log","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","expensesContent","length","map","filteredExpense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,GAHD;;AAKA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;AAC1D,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;AACD,GAFwB,CAAzB,CAR0B,CAY1B;;AACA,MAAIa,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BR,IAAAA,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACER,gBAAgB,CAACS,GAAjB,CAAsBC,eAAD,IAAqB;AACxC,0BACE,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,eAAe,CAACC,KAFzB;AAGE,QAAA,MAAM,EAAED,eAAe,CAACE,MAH1B;AAIE,QAAA,IAAI,EAAEF,eAAe,CAACN;AAJxB,SACOM,eAAe,CAACG,EADvB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATD,CADF;AAWD;;AAED,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAEnB,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,gBACGW;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAzDD;;GAAMf,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  // you can store jsx content in variables\n  let expensesContent = <p> No expenses found! </p>;\n\n  if (filteredExpenses.length > 0) {\n    filteredExpenses.length > 0 &&\n      filteredExpenses.map((filteredExpense) => {\n        return (\n          <ExpenseItem\n            key={filteredExpense.id}\n            title={filteredExpense.title}\n            amount={filteredExpense.amount}\n            date={filteredExpense.date}\n          />\n        );\n      });\n  }\n\n  return (\n    <div>\n      <ExpenseFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n\n      <Card className=\"expenses\">\n        {expensesContent}\n        {/* {\n          // returns 2nd part if 1st condition is met\n          filteredExpenses.length === 0 && <p>No Expenses Found!</p>\n        }\n\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((filteredExpense) => {\n            return (\n              <ExpenseItem\n                key={filteredExpense.id}\n                title={filteredExpense.title}\n                amount={filteredExpense.amount}\n                date={filteredExpense.date}\n              />\n            );\n          })} */}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}