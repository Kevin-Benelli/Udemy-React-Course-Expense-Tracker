{"ast":null,"code":"var _jsxFileName = \"/Users/kevinbenelli/Desktop/01-starting-project 3/src/components/ErrorBoundary.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends Component {\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({\n      hasError: true\n    });\n  } //error is automatically passed in to componentDidCatch()\n\n\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something Went Wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children; // because we wrap the errorboundary around jsx components that might throw errors\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/kevinbenelli/Desktop/01-starting-project 3/src/components/ErrorBoundary.js"],"names":["React","Component","ErrorBoundary","componentDidCatch","error","console","log","setState","hasError","constructor","state","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,QAAL,CAAc;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD,GAJmC,CAIlC;;;AAEFC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKD,KAAL,CAAWF,QAAf,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,WAAO,KAAKI,KAAL,CAAWC,QAAlB,CAJO,CAIqB;AAC7B;;AAhBmC;;AAmBtC,eAAeX,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  componentDidCatch(error) {\n    console.log(error);\n    this.setState({ hasError: true });\n  } //error is automatically passed in to componentDidCatch()\n\n  constructor() {\n    super();\n    this.state = { hasError: false };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <p>Something Went Wrong!</p>;\n    }\n    return this.props.children; // because we wrap the errorboundary around jsx components that might throw errors\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}